<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAACAAAAAAAA
        ACoAAADHAAAAyAAAACsAAAAAAAAAAgAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        ABEAAACLAAAA9wAAAP8AAAD/AAAA9wAAAI0AAAARAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAABmAAAA6QAAAP8AAAD9AAAA+gAAAPoAAAD9AAAA/wAAAOoAAABoAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAugAAAP8AAAD9AAAA+wAAAPsAAAD/AAAA/wAAAPwAAAD7AAAA/QAAAP8AAAC8AAAAAQAA
        AAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAQAA
        AAAAAAABAAAAAAAAAAgAAADjAAAA/wAAAPwAAAD+AAAA/wAAAMMAAADCAAAA/wAAAP4AAAD8AAAA/wAA
        AOUAAAAJAAAAAAAAAAEAAAAAAAAAAQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAA
        AAAAAAARAAAACwAAAAAAAAAAAAAACAAAAOEAAAD/AAAA/QAAAP8AAAB0AAAAAQAAAAAAAABzAAAA/wAA
        AP0AAAD/AAAA4gAAAAkAAAAAAAAAAAAAAAsAAAASAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAXAAAAN8AAAAmAAAAAAAAAAAAAAAIAAAA4wAAAP8AAAD/AAAA8QAAABQAAAAAAAAAAAAA
        ABQAAADwAAAA/wAAAP8AAADkAAAACQAAAAAAAAAAAAAAJwAAAOAAAABdAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAANQAAAMUAAAD/AAAA+gAAACIAAAAAAAAAAAAAAAgAAADjAAAA/wAAAP8AAADxAAAAGAAA
        AAAAAAAAAAAAGAAAAPEAAAD/AAAA/wAAAOQAAAAJAAAAAAAAAAAAAAAjAAAA+wAAAP8AAADFAAAANgAA
        AAAAAAABAAAAAAAAAAAAAADTAAAA/wAAAPsAAAD5AAAAIwAAAAAAAAAAAAAACAAAAOMAAAD/AAAA/wAA
        APEAAAAVAAAAAAAAAAAAAAAVAAAA8QAAAP8AAAD/AAAA5AAAAAkAAAAAAAAAAAAAACQAAAD6AAAA+wAA
        AP8AAADTAAAAAAAAAAAAAAAAAAAAAAAAANMAAAD/AAAA/gAAAPsAAAAjAAAAAAAAAAAAAAAIAAAA4wAA
        AP8AAAD/AAAA8QAAABUAAAAAAAAAAAAAABUAAADxAAAA/wAAAP8AAADkAAAACQAAAAAAAAAAAAAAIwAA
        APwAAAD+AAAA/wAAANMAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAP8AAAD+AAAA+wAAACMAAAAAAAAAAAAA
        AAgAAADjAAAA/wAAAP8AAADxAAAAFQAAAAAAAAAAAAAAFQAAAPEAAAD/AAAA/wAAAOQAAAAJAAAAAAAA
        AAAAAAAjAAAA/AAAAP4AAAD/AAAA1AAAAAAAAAAAAAAAAAAAAAAAAADUAAAA/wAAAP4AAAD7AAAAIwAA
        AAAAAAAAAAAACAAAAOMAAAD/AAAA/wAAAPEAAAAVAAAAAAAAAAAAAAAVAAAA8QAAAP8AAAD/AAAA5AAA
        AAkAAAAAAAAAAAAAACMAAAD8AAAA/gAAAP8AAADVAAAAAAAAAAAAAAAAAAAAAAAAANQAAAD/AAAA/gAA
        APsAAAAjAAAAAAAAAAAAAAAIAAAA4wAAAP8AAAD/AAAA8QAAABUAAAAAAAAAAAAAABUAAADxAAAA/wAA
        AP8AAADkAAAACQAAAAAAAAAAAAAAIwAAAPwAAAD+AAAA/wAAANUAAAAAAAAAAAAAAAAAAAAAAAAA1AAA
        AP8AAAD+AAAA+wAAACMAAAAAAAAAAAAAAAgAAADjAAAA/wAAAP8AAADxAAAAFQAAAAAAAAAAAAAAFQAA
        APEAAAD/AAAA/wAAAOQAAAAJAAAAAAAAAAAAAAAjAAAA/AAAAP4AAAD/AAAA1QAAAAAAAAAAAAAAAAAA
        AAAAAADUAAAA/wAAAP4AAAD7AAAAIwAAAAAAAAAAAAAACAAAAOMAAAD/AAAA/wAAAPEAAAAVAAAAAAAA
        AAAAAAAVAAAA8QAAAP8AAAD/AAAA5AAAAAkAAAAAAAAAAAAAACMAAAD8AAAA/gAAAP8AAADVAAAAAAAA
        AAAAAAAAAAAAAAAAANQAAAD/AAAA/gAAAPsAAAAjAAAAAAAAAAAAAAAIAAAA4wAAAP8AAAD/AAAA8QAA
        ABUAAAAAAAAAAAAAABUAAADxAAAA/wAAAP8AAADkAAAACQAAAAAAAAAAAAAAIwAAAPwAAAD+AAAA/wAA
        ANUAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAP8AAAD+AAAA+wAAACMAAAAAAAAAAAAAAAgAAADjAAAA/wAA
        AP8AAADxAAAAFQAAAAAAAAAAAAAAFQAAAPEAAAD/AAAA/wAAAOQAAAAJAAAAAAAAAAAAAAAjAAAA/AAA
        AP4AAAD/AAAA1QAAAAAAAAAAAAAAAAAAAAAAAADUAAAA/wAAAP4AAAD7AAAAIwAAAAAAAAAAAAAACAAA
        AOAAAAD/AAAA/wAAAPEAAAAVAAAAAAAAAAAAAAAVAAAA8QAAAP8AAAD/AAAA4gAAAAkAAAAAAAAAAAAA
        ACMAAAD8AAAA/gAAAP8AAADVAAAAAAAAAAAAAAAAAAAAAAAAANQAAAD/AAAA/gAAAPsAAAAjAAAAAAAA
        AAAAAAAIAAAA5AAAAP8AAAD/AAAA8QAAABUAAAAAAAAAAAAAABUAAADxAAAA/wAAAP8AAADlAAAACQAA
        AAAAAAAAAAAAIwAAAPwAAAD+AAAA/wAAANUAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAP8AAAD+AAAA+wAA
        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
        QAFIAAASogAAReiAARfyQAJP/RAIv/9EIv8=
</value>
  </data>
</root>